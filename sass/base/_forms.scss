// Forms
// $form-box-shadow: inset 0 1px 3px rgba(#000, 0.06);
// $form-box-shadow-focus: $form-box-shadow, 0 0 5px adjust-color($action-color, $lightness: -5%, $alpha: -0.3);
$form-border-radius: 3px;
$form-spacing-horizontal: 10px;
$form-spacing-vertical: 3px;
$form-line-height: 28px;
$form-line-height-small: 20px;
$hightlight-border: none;
$label-width: 160px;

label {
  font-size: $small-font-size;
  display: block;
  float: left;
  width: $label-width;
  border: $hightlight-border;
  line-height: $form-line-height;
}

div.form-element {
  border: $hightlight-border;
  margin-bottom: 10px;
}

/* Button Mixins */

@mixin button() {
  // Standard Stuff
  font-family: sans-serif;
  display: inline-block;
	height: auto;
  width: auto;
	padding: $form-spacing-vertical ($form-spacing-horizontal * 2);
  background-color: $gray;
  text-align: center;
	font-size: $base-font-size;
	font-weight: normal;
	text-decoration: none;
	white-space: nowrap;
	border-radius: $form-border-radius;
  border: none;
  cursor: pointer;
  margin: 0;
  margin-right: 6px;

  &::-moz-focus-inner {
		border: 0;
		padding: 0;
	}

}

@mixin set-button-color($background-color: $gold, $text-color: $white, $outline: "false") {
  color: $text-color;
  background-color: $background-color;
  border: 2px solid $background-color;

  @if $outline == "false" {
    // Default Colors
    &:hover,
    &:active {
      color: $text-color;
      background-color: darken($background-color, 5%);
      border-color: darken($background-color, 8%);
    }

    &:active {
      color: $text-color;
      background-color: darken($background-color, 8%);
      border-color: darken($background-color, 12%);
      @include prefixer(box-shadow, inset 2px 2px 2px 1px rgba(darken($background-color, 12%), .5), webkit moz spec);
    }

  } @else {
    border: 2px solid lighten($text-color, 5%);

    &:hover,
    &:active {
      color: $white;
      background-color: $text-color;
      border: 2px solid $text-color;
    }

    &:active {
      color: $white;
      background-color: $text-color;
      border-color: darken($text-color, 8%);
      @include prefixer(box-shadow, inset 2px 2px 2px 1px rgba(darken($text-color, 8%), .5), webkit moz spec);
    }
  }
}

@mixin set-button-size($size: "default") {
  @if $size == "default" {
    line-height: $form-line-height;
  } @else {
    font-size: $base-font-size - 2px;
    font-weight: bold;
    line-height: $form-line-height-small;
    padding: ($form-spacing-vertical / 2) $form-spacing-horizontal;
  }
}

/* Input Mixins */

@mixin input() {
  font-size: $base-font-size;
  height: auto;
  width: auto;
  border: none;
  display: inline-block;
  line-height: $form-line-height;
	background-color: $white;
	border: 1px solid $gray-light;
	box-sizing: border-box;
  padding: $form-spacing-vertical $form-spacing-horizontal;
  margin-right: 14px;

  $shadows: 0px 1px 2px 0px rgba($black-secondary, .5);
  @include prefixer(box-shadow, $shadows, webkit moz spec);
  @include prefixer(border-radius, $form-border-radius, webkit moz spec);
  @include prefixer(appearance, none, webkit moz spec);

  &:focus {
    border-color: $blue;
    border-left-width: 5px;
    padding-left: $form-spacing-horizontal - 4px;
	  outline: 0;

    $shadows: 0px 1px 1px rgba($black-secondary, .3), 0px 0px 20px 0 rgba($blue, .75);
    @include prefixer(box-shadow, $shadows, webkit moz spec);
    @include prefixer(border-top-left-radius, 0, webkit moz spec);
    @include prefixer(border-bottom-left-radius, 0, webkit moz spec);
    @include transition(box-shadow .2s ease-in-out);
  }

}

@mixin input-size($size: "default") {
  @if $size == "default" {
    padding: $form-spacing-vertical $form-spacing-horizontal;
  } @else {
    font-size: $base-font-size - 2px;
    line-height: $form-line-height-small;
    padding: ($form-spacing-vertical / 2) $form-spacing-horizontal;
  }
}

@mixin input-select() {
  padding-right: 40px;
  @include retina-image("../images/form_select_arrow_down", 40px 40px);
  background-repeat: no-repeat;
  background-position: right center;

  &:hover,
  &:active,
  &:focus {
    @include retina-image("../images/form_select_arrow_down_hover", 40px 40px);
  }
}

@mixin set-input-style($style: "default") {
  @if $style == "inset" {
    @include prefixer(box-shadow, inset 0px 1px 8px 0px rgba(darken($gray, 8%), .5), webkit moz spec);
    border-color: $gray-light-secondary;
  } @else {
    // do nothing
  }
}

$form-elements-width-small: 80px;
$form-elements-width-medium: 160px;
$form-elements-width-wide: 300px;

@mixin form-element-width($width: "default", $offset: 0) {
  @if $width == "default" {
    width: $form-elements-width-medium - $offset;
  } @else if $width == "narrow" {
    width: $form-elements-width-small - $offset;
  } @else if $width == "medium" {
    width: $form-elements-width-medium - $offset;
  } @else if $width == "wide" {
    width: $form-elements-width-wide - $offset;
  } @else if $width == "full-width" {
    clear: right;
    width: 100%;
  } @else {
    width: $width - $offset;
  }
}

/* Form Elements Application */

.button,
button,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  @include button;
  @include set-button-color($gold);
  @include set-button-size;

  &.outline {
    @include set-button-color(transparent, $gold, "outline");
  }

  &.action {
    @include set-button-color($orange, $white);

    &.outline {
      @include set-button-color(transparent, $orange, "outline");
    }
  }

  &.secondary {
    @include set-button-color($gold-light, $white);

    &.outline {
      @include set-button-color(transparent, $gold-light, "outline");
    }
  }

  &.small {
    @include set-button-size("small");
  }
}

input[type="email"],
input[type="number"],
input[type="search"],
input[type="text"],
input[type="tel"],
input[type="url"],
input[type="password"],
textarea,
select {
  @include input;
  @include input-size("default");
  @include set-input-style("inset");
  @include form-element-width("default");

  &.small {
    @include input-size("small");
  }

  &.narrow {
    @include form-element-width("narrow");
  }

  &.medium {
    @include form-element-width("medium");
  }

  &.wide {
    @include form-element-width("wide");
  }

  &.full-width {
    @include form-element-width("full-width");
  }
}

select {
  @include input-select;
}
